---
import Header from '../components/Header';
import Footer from '../components/Footer';
import { ToastContainer } from '../components/ui/toast';
import DelayedServiceWorker from '../components/DelayedServiceWorker';

interface Props {
	title: string;
	hideHeader?: boolean;
	hideFooter?: boolean;
}

// Replace "Pastebin" with "Erfi's Pastebin" in title if not already set
let { title, hideHeader = false, hideFooter = false } = Astro.props;

if (title && title.includes('Pastebin')) {
  title = title.replace('Pastebin', 'Pasteriser');
}

// Script to set the theme before page renders to avoid flashing
const themeScript = `
  // Get theme from localStorage or default to system
  const theme = localStorage.getItem('theme') || 'system';
  const systemTheme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
  
  // Apply the right theme class
  if (theme === 'dark' || (theme === 'system' && systemTheme === 'dark')) {
    document.documentElement.classList.add('dark');
  } else {
    document.documentElement.classList.add('light');
  }
`;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		
		<!-- Primary Meta Tags -->
		<title>{title}</title>
		<meta name="title" content={title} />
		<meta name="description" content="A modern, secure code sharing service with syntax highlighting, password protection, and burn-after-reading functionality" />
		<meta name="keywords" content="pastebin, code sharing, syntax highlighting, secure paste, burn after reading, password protection, erfi anugrah" />
		<meta name="author" content="Erfi Anugrah" />
		
		<!-- Open Graph / Facebook -->
		<meta property="og:type" content="website" />
		<meta property="og:url" content={Astro.url.href} />
		<meta property="og:title" content={title} />
		<meta property="og:description" content="A modern, secure code sharing service with syntax highlighting, password protection, and burn-after-reading functionality" />
		<meta property="og:image" content={new URL('/og-image.png', Astro.url)} />
		
		<!-- Twitter -->
		<meta property="twitter:card" content="summary_large_image" />
		<meta property="twitter:url" content={Astro.url.href} />
		<meta property="twitter:title" content={title} />
		<meta property="twitter:description" content="A modern, secure code sharing service with syntax highlighting, password protection, and burn-after-reading functionality" />
		<meta property="twitter:image" content={new URL('/og-image.png', Astro.url)} />
		
		<!-- Favicon -->
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
		<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
		<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
		<link rel="manifest" href="/site.webmanifest" />
		<meta name="theme-color" content="#4F46E5" />
		
		<!-- Generator Info -->
		<meta name="generator" content={Astro.generator} />
		
		<!-- Theme Script -->
		<script set:html={themeScript} />
		
		<!-- Prism.js for Syntax Highlighting - Using installed npm package -->
		<style is:global>
			@import 'prismjs/themes/prism.css';
			@import 'prismjs/plugins/line-numbers/prism-line-numbers.css';
			@import 'prismjs/plugins/toolbar/prism-toolbar.css';
		</style>
	</head>
	<body class="min-h-screen flex flex-col bg-background text-foreground">
		{!hideHeader && <Header client:load />}
		<main class="flex-grow">
			<slot />
		</main>
		{!hideFooter && <Footer />}
		
		<ToastContainer client:load />
		<DelayedServiceWorker client:load />
		
		<!-- Prism.js Scripts - Using NPM package -->
		<script>
			// Import Prism and plugins
			import Prism from 'prismjs';
			
			// Import language components
			import 'prismjs/components/prism-typescript';
			import 'prismjs/components/prism-jsx';
			import 'prismjs/components/prism-tsx';
			import 'prismjs/components/prism-yaml';
			import 'prismjs/components/prism-json';
			import 'prismjs/components/prism-bash';
			import 'prismjs/components/prism-hcl';
			import 'prismjs/components/prism-toml';
			import 'prismjs/components/prism-docker';
			
			// Import plugins
			import 'prismjs/plugins/line-numbers/prism-line-numbers';
			import 'prismjs/plugins/toolbar/prism-toolbar';
			import 'prismjs/plugins/copy-to-clipboard/prism-copy-to-clipboard';
			
			// Make Prism available globally for our components
			window.Prism = Prism;
			
			// Highlight all code blocks when page loads
			document.addEventListener('DOMContentLoaded', () => {
				Prism.highlightAll();
			});
		</script>
	</body>
</html>
<style is:global>
	@import '../styles/globals.css';

	/* Custom UI and theme enhancements */
	.dark [data-theme="dark"] {
		display: block;
	}
	
	.light [data-theme="dark"] {
		display: none;
	}
	
	.dark [data-theme="light"] {
		display: none;
	}
	
	.light [data-theme="light"] {
		display: block;
	}
	
	/* Additional Prism.js customizations */
	pre[class*="language-"].line-numbers {
		padding-left: 3.5em;
	}
</style>