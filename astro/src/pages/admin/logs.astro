---
import Layout from '../../layouts/Layout.astro';
import { Card, CardContent, CardHeader, CardTitle } from '../../components/ui/card';
import { Button } from '../../components/ui/button';

// This will be replaced with actual admin auth middleware
const isAuthenticated = true;
---

<Layout title="System Logs - Admin Dashboard - Pastebin">
  <main class="container mx-auto px-4 py-8">
    {!isAuthenticated ? (
      <div class="flex justify-center items-center min-h-[60vh]">
        <p class="text-xl">Please <a href="/admin" class="text-primary hover:underline">login</a> to access this page.</p>
      </div>
    ) : (
      <div>
        <div class="flex justify-between items-center mb-8">
          <h1 class="text-3xl font-bold">System Logs</h1>
          <div class="flex gap-2">
            <select 
              id="logLevel" 
              class="rounded-md border border-input px-3 py-1.5 bg-background text-sm"
            >
              <option value="all">All Levels</option>
              <option value="debug">Debug</option>
              <option value="info">Info</option>
              <option value="warn">Warning</option>
              <option value="error">Error</option>
            </select>
            
            <input
              type="date"
              id="startDate"
              class="rounded-md border border-input px-3 py-1.5 bg-background text-sm"
            />
            
            <Button variant="secondary" size="sm" id="refreshBtn">
              Refresh
            </Button>
          </div>
        </div>
        
        <Card>
          <CardHeader>
            <div class="flex justify-between items-center">
              <CardTitle>Log Entries</CardTitle>
              <div class="flex gap-2">
                <Button variant="outline" size="sm">
                  Export Logs
                </Button>
                <Button variant="outline" size="sm" class="text-destructive">
                  Clear Logs
                </Button>
              </div>
            </div>
          </CardHeader>
          <CardContent>
            <div class="relative overflow-x-auto">
              <table class="w-full text-sm text-left">
                <thead class="text-xs uppercase bg-muted/40">
                  <tr>
                    <th scope="col" class="px-4 py-3">Timestamp</th>
                    <th scope="col" class="px-4 py-3">Level</th>
                    <th scope="col" class="px-4 py-3">Message</th>
                    <th scope="col" class="px-4 py-3">Context</th>
                  </tr>
                </thead>
                <tbody id="logTableBody">
                  <tr class="border-b border-muted/20">
                    <td class="px-4 py-3 text-xs whitespace-nowrap">2025-04-12 15:30:45</td>
                    <td class="px-4 py-3">
                      <span class="inline-flex items-center rounded-full bg-blue-100 dark:bg-blue-900/30 px-2.5 py-0.5 text-xs font-medium text-blue-800 dark:text-blue-300">
                        INFO
                      </span>
                    </td>
                    <td class="px-4 py-3">New paste created</td>
                    <td class="px-4 py-3 font-mono text-xs">{"pasteId":"abc123"}</td>
                  </tr>
                  <tr class="border-b border-muted/20">
                    <td class="px-4 py-3 text-xs whitespace-nowrap">2025-04-12 15:25:30</td>
                    <td class="px-4 py-3">
                      <span class="inline-flex items-center rounded-full bg-yellow-100 dark:bg-yellow-900/30 px-2.5 py-0.5 text-xs font-medium text-yellow-800 dark:text-yellow-300">
                        WARN
                      </span>
                    </td>
                    <td class="px-4 py-3">Rate limit triggered</td>
                    <td class="px-4 py-3 font-mono text-xs">{"ip":"192.168.1.1","attempts":10}</td>
                  </tr>
                  <tr class="border-b border-muted/20">
                    <td class="px-4 py-3 text-xs whitespace-nowrap">2025-04-12 15:20:15</td>
                    <td class="px-4 py-3">
                      <span class="inline-flex items-center rounded-full bg-red-100 dark:bg-red-900/30 px-2.5 py-0.5 text-xs font-medium text-red-800 dark:text-red-300">
                        ERROR
                      </span>
                    </td>
                    <td class="px-4 py-3">Failed to create paste</td>
                    <td class="px-4 py-3 font-mono text-xs">{"error":"Invalid content type"}</td>
                  </tr>
                  <tr class="border-b border-muted/20">
                    <td class="px-4 py-3 text-xs whitespace-nowrap">2025-04-12 15:15:00</td>
                    <td class="px-4 py-3">
                      <span class="inline-flex items-center rounded-full bg-green-100 dark:bg-green-900/30 px-2.5 py-0.5 text-xs font-medium text-green-800 dark:text-green-300">
                        DEBUG
                      </span>
                    </td>
                    <td class="px-4 py-3">Processed request</td>
                    <td class="px-4 py-3 font-mono text-xs">{"method":"GET","path":"/pastes/abc123","duration":"45ms"}</td>
                  </tr>
                </tbody>
              </table>
            </div>
            
            <div class="flex justify-between items-center mt-4">
              <div class="text-sm text-muted-foreground">
                Showing <span id="logCount">4</span> entries
              </div>
              <div class="flex space-x-2">
                <Button variant="outline" size="sm" disabled>
                  Previous
                </Button>
                <Button variant="outline" size="sm">
                  Next
                </Button>
              </div>
            </div>
          </CardContent>
        </Card>
        
        <div class="mt-8">
          <Card>
            <CardHeader>
              <CardTitle>Log Settings</CardTitle>
            </CardHeader>
            <CardContent>
              <form class="space-y-4">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <label for="logRetention" class="block text-sm font-medium mb-1">
                      Log Retention (days)
                    </label>
                    <input
                      id="logRetention"
                      type="number"
                      min="1"
                      max="365"
                      value="30"
                      class="w-full rounded-md border border-input px-3 py-2 bg-background"
                    />
                  </div>
                  <div>
                    <label for="minLogLevel" class="block text-sm font-medium mb-1">
                      Minimum Log Level
                    </label>
                    <select
                      id="minLogLevel"
                      class="w-full rounded-md border border-input px-3 py-2 bg-background"
                    >
                      <option value="debug">Debug</option>
                      <option value="info" selected>Info</option>
                      <option value="warn">Warning</option>
                      <option value="error">Error</option>
                    </select>
                  </div>
                </div>
                <div>
                  <Button type="submit">Save Settings</Button>
                </div>
              </form>
            </CardContent>
          </Card>
        </div>
      </div>
    )}
  </main>
</Layout>

<script>
  // This will be replaced with actual data fetching
  document.addEventListener('DOMContentLoaded', () => {
    const logLevel = document.getElementById('logLevel');
    const startDate = document.getElementById('startDate');
    const refreshBtn = document.getElementById('refreshBtn');
    
    // Set today's date as default
    if (startDate instanceof HTMLInputElement) {
      const today = new Date();
      const year = today.getFullYear();
      const month = String(today.getMonth() + 1).padStart(2, '0');
      const day = String(today.getDate()).padStart(2, '0');
      startDate.value = `${year}-${month}-${day}`;
    }
    
    // Add event listener to refresh button
    if (refreshBtn) {
      refreshBtn.addEventListener('click', () => {
        const level = logLevel instanceof HTMLSelectElement ? logLevel.value : 'all';
        const date = startDate instanceof HTMLInputElement ? startDate.value : '';
        console.log(`Fetching logs with level: ${level}, date: ${date}`);
        // Here we would fetch logs and update the table
      });
    }
  });
</script>